version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.2-node
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          PG_HOST: 127.0.0.1
          PGUSER: placesharing
          RAILS_MASTER_KEY: $RAILS_MASTER_KEY

      - image: circleci/postgres:12.0
        environment:
          POSTGRES_DB: placesharing_db
          POSTGRES_USER: placesharing

    working_directory: ~/qi-ps

    steps:
      - checkout
      - run:
          name: "echo an env var that is part of QI-PS test context"
          command: |
            echo $RAILS_MASTER_KEY
      - run:
          name: install dependencies
          command: |
            sudo apt-get update -qq && sudo apt-get -y install \
              autoconf \
              automake \
              build-essential \
              cmake \
              git-core \
              libass-dev \
              libfreetype6-dev \
              libgnutls28-dev \
              libsdl2-dev \
              libtool \
              libva-dev \
              libvdpau-dev \
              libvorbis-dev \
              libxcb1-dev \
              libxcb-shm0-dev \
              libxcb-xfixes0-dev \
              pkg-config \
              texinfo \
              wget \
              yasm \
              zlib1g-dev

      - run:
          name: install ffmpeg
          command: |
            sudo apt-get install ffmpeg
      - run:
          name: install dependencies
          command: |
            bundle -v
            sudo gem install bundler:2.1.4 --default
            bundle -v
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: yarn install
      - run:
          name: Setup DB
          command: |
            pg_ctl status
            pg_ctl start
            bundle exec rails db:create db:schema:load --trace

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            # bundle exec rspec --format progress \
            #     --out /tmp/test-results/rspec.xml \
            #     --format progress

            # https://github.com/rspec/rspec-core/issues/2451
            bundle exec rspec

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
