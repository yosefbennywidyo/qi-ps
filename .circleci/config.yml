version: 2.1

orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.2-node
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          DATABASE_URL: postgres://postgres:password@localhost:5432/tech_cast_test
          RAILS_ENV: test
          RAILS_MASTER_KEY: $RAILS_MASTER_KEY

      - image: circleci/postgres:12.0

    working_directory: ~/qi-ps

    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: "echo an env var that is part of QI-PS test context"
          command: |
            echo $RAILS_MASTER_KEY
      - run: cp config/deploy/ci/database.yml config/database.yml
      - restore_cache:
          keys:
            - qi-ps-bundle-v1-{{ checksum "Gemfile.lock" }}
            - qi-ps-bundle-v1-

      - run:
          name: install ffmpeg
          command: |
            sudo apt-get install ffmpeg
      - run:
          name: install dependencies
          command: |
            sudo gem install bundler:2.1.4 --default
            bundle -v
            bundle check || bundle install

      - save_cache:
          key: qi-ps-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: yarn install
      # Wait for DB
      - run: dockerize -wait tcp://0.0.0.0:5432 -timeout 1m
      - run:
          name: Setup DB
          command: |
            RAILS_ENV=test bundle exec rails db:create --trace

      # run tests!
      - run:
          name: Run rspec in parallel
          command: |
            RAILS_ENV=test bundle exec rspec --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
